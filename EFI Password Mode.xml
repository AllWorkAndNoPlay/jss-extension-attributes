<?xml version="1.0" encoding="UTF-8"?><extensionAttribute>
<displayName>EFI Password Mode</displayName>
<description>Displays "none" if no firmware password is set; displays "command" or "full" if a firmware password is set. &#13;
Value could also be NULL (as in never no value), Or "" as in value return blank. &#13;
&#13;
Create smart group "EFI Password not Set or not Reported". Set citeria to be if EFI Password Mode is not "command" or if EFI Password Mode is not "full".  (this group will include new computers that haven't reported in)&#13;
Create smart group "EFI Password is Set" Set citeria to be not a member of  "EFI Password not Set or not Reported".   (this group will NOT include new computers that haven't reported in)</description>
<dataType>string</dataType>
<scriptContentsMac>#!/bin/sh&#13;
&#13;
# set value to macOS Major Version number. As in X of 10.X.00.&#13;
macOSVersionMajor=$(sw_vers -productVersion | awk '{print $2}')&#13;
&#13;
&#13;
#check macOS Major Version number&#13;
if [[ $macOSVersionMajor -le 10 ]]; then&#13;
	#if macOS is greater then or equal to macOS 10.10.0&#13;
	result=`firmwarepasswd -mode | grep Mode | awk '{print $2}'`&#13;
else&#13;
	result=`nvram -p | grep security-mode | awk '{print $2}'`&#13;
fi&#13;
&#13;
&#13;
if [ "$result" != "" ]; then&#13;
	echo "&lt;result&gt;$result&lt;/result&gt;"&#13;
else &#13;
	echo "&lt;result&gt;none&lt;/result&gt;"&#13;
fi</scriptContentsMac>
</extensionAttribute>
